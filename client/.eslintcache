[{"/home/bleart/projects/lab1/client/src/index.tsx":"1","/home/bleart/projects/lab1/client/src/reportWebVitals.ts":"2","/home/bleart/projects/lab1/client/src/app/stores/store.ts":"3","/home/bleart/projects/lab1/client/src/app/layout/App.tsx":"4","/home/bleart/projects/lab1/client/src/app/stores/patientStore.ts":"5","/home/bleart/projects/lab1/client/src/app/stores/testStore.ts":"6","/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx":"7","/home/bleart/projects/lab1/client/src/features/home/HomePage.tsx":"8","/home/bleart/projects/lab1/client/src/features/stats/CountryDashboard.tsx":"9","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientDashboard.tsx":"10","/home/bleart/projects/lab1/client/src/features/patients/form/PatientForm.tsx":"11","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx":"12","/home/bleart/projects/lab1/client/src/app/api/agent.ts":"13","/home/bleart/projects/lab1/client/src/features/stats/CountryList.tsx":"14","/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx":"15","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientList.tsx":"16","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx":"17","/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx":"18","/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx":"19","/home/bleart/projects/lab1/client/src/errors/TestError.tsx":"20","/home/bleart/projects/lab1/client/src/errors/NotFound.tsx":"21","/home/bleart/projects/lab1/client/src/errors/ValidationErrors.tsx":"22","/home/bleart/projects/lab1/client/src/app/stores/commonStore.ts":"23","/home/bleart/projects/lab1/client/src/errors/ServerError.tsx":"24"},{"size":886,"mtime":1621779208156,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1607152858000,"results":"27","hashOfConfig":"26"},{"size":527,"mtime":1621783756161,"results":"28","hashOfConfig":"26"},{"size":1486,"mtime":1621784209198,"results":"29","hashOfConfig":"26"},{"size":3010,"mtime":1621783216714,"results":"30","hashOfConfig":"26"},{"size":2674,"mtime":1620935648356,"results":"31","hashOfConfig":"26"},{"size":946,"mtime":1621783183265,"results":"32","hashOfConfig":"26"},{"size":3492,"mtime":1621782884342,"results":"33","hashOfConfig":"26"},{"size":141,"mtime":1621782809362,"results":"34","hashOfConfig":"26"},{"size":984,"mtime":1621675393593,"results":"35","hashOfConfig":"26"},{"size":2995,"mtime":1621675393593,"results":"36","hashOfConfig":"26"},{"size":1270,"mtime":1621782745461,"results":"37","hashOfConfig":"26"},{"size":3113,"mtime":1621784675839,"results":"38","hashOfConfig":"26"},{"size":2229,"mtime":1621782872131,"results":"39","hashOfConfig":"26"},{"size":357,"mtime":1621675393593,"results":"40","hashOfConfig":"26"},{"size":1806,"mtime":1621675393593,"results":"41","hashOfConfig":"26"},{"size":1740,"mtime":1621675393597,"results":"42","hashOfConfig":"26"},{"size":1153,"mtime":1620661818632,"results":"43","hashOfConfig":"26"},{"size":2350,"mtime":1621675393597,"results":"44","hashOfConfig":"26"},{"size":2091,"mtime":1621783147853,"results":"45","hashOfConfig":"26"},{"size":428,"mtime":1621778769352,"results":"46","hashOfConfig":"26"},{"size":421,"mtime":1621783055178,"results":"47","hashOfConfig":"26"},{"size":298,"mtime":1621783736625,"results":"48","hashOfConfig":"26"},{"size":626,"mtime":1621784130920,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"11f68r5",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bleart/projects/lab1/client/src/index.tsx",[],["101","102"],"/home/bleart/projects/lab1/client/src/reportWebVitals.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/store.ts",[],"/home/bleart/projects/lab1/client/src/app/layout/App.tsx",[],"/home/bleart/projects/lab1/client/src/app/stores/patientStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/testStore.ts",[],"/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx",[],"/home/bleart/projects/lab1/client/src/features/home/HomePage.tsx",[],"/home/bleart/projects/lab1/client/src/features/stats/CountryDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/form/PatientForm.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/app/api/agent.ts",["103"],"/home/bleart/projects/lab1/client/src/features/stats/CountryList.tsx",["104"],"import React, { useEffect, useState } from \"react\";\nimport { Item, Statistic } from \"semantic-ui-react\";\nimport agent from \"../../app/api/agent\";\nimport { Country } from \"../../app/models/country\";\n\nexport default function CountryList() {\n  const [countries, setCountries] = useState<Country[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // if (loading) return <LoadingComponent content=\"Loading app\" />;\n\n  useEffect(() => {\n    agent.Countries.list().then((response) => {\n      let countries: Country[] = [];\n      response.forEach((country) => {\n        // test.date = test.date.split(\"T\")[0];\n        countries.push(country);\n      });\n      setCountries(countries);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <Item.Group divided>\n      {countries.map((country) => (\n        <Item key={country.id}>\n          <Item.Content>\n            <Item.Header as=\"a\">{country.name}</Item.Header>\n            <Item.Description>\n              <Statistic>\n                <Statistic.Value>{country.infections}</Statistic.Value>\n                <Statistic.Label>Infektime</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.deaths}</Statistic.Value>\n                <Statistic.Label>Vdekje</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.recoveries}</Statistic.Value>\n                <Statistic.Label>Rikuperime</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.vaccinated}</Statistic.Value>\n                <Statistic.Label>Vaksinime</Statistic.Label>\n              </Statistic>\n\n              {/* <div>Infections: {country.infections}</div>\n              <div>Deaths: {country.deaths}</div>\n              <div>Recoveries: {country.recoveries}</div>\n              <div>Vaccinated: {country.vaccinated}</div> */}\n            </Item.Description>\n            <Item.Extra>\n              {/* <Button floated=\"right\" content=\"View\" color=\"blue\" />\n                <Button floated=\"right\" content=\"Delete\" color=\"red\" /> */}\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n      ))}\n    </Item.Group>\n  );\n}\n","/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientList.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx",[],"/home/bleart/projects/lab1/client/src/errors/TestError.tsx",[],"/home/bleart/projects/lab1/client/src/errors/NotFound.tsx",[],"/home/bleart/projects/lab1/client/src/errors/ValidationErrors.tsx",["105"],"import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: string[] | null;\n}\n\nexport default function ValidationError({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i) => {\n            <Message.Item key={i}>{err}</Message.Item>;\n          })}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","/home/bleart/projects/lab1/client/src/app/stores/commonStore.ts",[],"/home/bleart/projects/lab1/client/src/errors/ServerError.tsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":25},{"ruleId":"110","severity":1,"message":"114","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":13,"column":37,"nodeType":"117","messageId":"118","endLine":13,"endColumn":39},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"@typescript-eslint/no-unused-vars","'storeAnnotation' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]