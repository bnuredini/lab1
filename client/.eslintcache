[{"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\index.tsx":"1","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\stores\\store.ts":"3","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\layout\\App.tsx":"4","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\stores\\patientStore.ts":"5","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\stores\\testStore.ts":"6","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\layout\\NavBar.tsx":"7","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\patients\\dashboard\\PatientDashboard.tsx":"8","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\home\\HomePage.tsx":"9","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\dashboard\\TestDashboard.tsx":"10","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\stats\\CountryDashboard.tsx":"11","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\api\\agent.ts":"12","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\layout\\LoadingComponent.tsx":"13","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\patients\\dashboard\\PatientList.tsx":"14","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\dashboard\\TestList.tsx":"15","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\stats\\CountryList.tsx":"16","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\details\\TestDetails.tsx":"17","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\form\\TestForm.tsx":"18","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\patients\\form\\PatientForm.tsx":"19"},{"size":763,"mtime":1621495212408,"results":"20","hashOfConfig":"21"},{"size":440,"mtime":1621495212408,"results":"22","hashOfConfig":"21"},{"size":443,"mtime":1621495212399,"results":"23","hashOfConfig":"21"},{"size":1033,"mtime":1621506251494,"results":"24","hashOfConfig":"21"},{"size":3130,"mtime":1621504741733,"results":"25","hashOfConfig":"21"},{"size":2796,"mtime":1621504746624,"results":"26","hashOfConfig":"21"},{"size":997,"mtime":1621501795506,"results":"27","hashOfConfig":"21"},{"size":1017,"mtime":1621506296121,"results":"28","hashOfConfig":"21"},{"size":3619,"mtime":1621510667616,"results":"29","hashOfConfig":"21"},{"size":1323,"mtime":1621509415009,"results":"30","hashOfConfig":"21"},{"size":214,"mtime":1621500334112,"results":"31","hashOfConfig":"21"},{"size":2181,"mtime":1621504753811,"results":"32","hashOfConfig":"21"},{"size":375,"mtime":1621499685234,"results":"33","hashOfConfig":"21"},{"size":1862,"mtime":1621509498589,"results":"34","hashOfConfig":"21"},{"size":1793,"mtime":1621509468428,"results":"35","hashOfConfig":"21"},{"size":2412,"mtime":1621501699459,"results":"36","hashOfConfig":"21"},{"size":1193,"mtime":1621495212407,"results":"37","hashOfConfig":"21"},{"size":2442,"mtime":1621502035276,"results":"38","hashOfConfig":"21"},{"size":3101,"mtime":1621504723580,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"188hxxt",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\index.tsx",[],["84","85"],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\stores\\store.ts",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\layout\\App.tsx",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\stores\\patientStore.ts",["86"],"import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { Patient } from \"../models/patient\";\r\nimport agent from \"../api/agent\";\r\n\r\nexport default class PatientStore {\r\n  patientRegistry = new Map<string, Patient>();\r\n  selectedPatient: Patient | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = true;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get patientsByDate() {\r\n    return Array.from(this.patientRegistry.values()).sort(\r\n      (a, b) => Date.parse(a.birthday) - Date.parse(b.birthday)\r\n    );\r\n  }\r\n\r\n  loadPatients = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const patients = await agent.Patients.list();\r\n      patients.forEach((patient) => {\r\n        this.setPatient(patient);\r\n      });\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  loadPatient = async (id: string) => {\r\n    let patient = this.getPatient(id);\r\n\r\n    if (patient) {\r\n      this.selectedPatient = patient;\r\n      return patient;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        patient = await agent.Patients.details(id);\r\n        this.setPatient(patient);\r\n        runInAction(() => {\r\n          this.selectedPatient = patient;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return patient;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setPatient = (patient: Patient) => {\r\n    patient.birthday = patient.birthday;\r\n    this.patientRegistry.set(patient.id, patient);\r\n  };\r\n\r\n  private getPatient = (id: string) => {\r\n    return this.patientRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createPatient = async (patient: Patient) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Patients.create(patient);\r\n      runInAction(() => {\r\n        this.patientRegistry.set(patient.id, patient);\r\n        this.selectedPatient = patient;\r\n        this.editMode = false;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n  updatePatient = async (patient: Patient) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Patients.update(patient);\r\n      runInAction(() => {\r\n        this.patientRegistry.set(patient.id, patient);\r\n        this.selectedPatient = patient;\r\n        this.editMode = false;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePatient = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Patients.delete(id);\r\n      runInAction(() => {\r\n        this.patientRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\stores\\testStore.ts",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\layout\\NavBar.tsx",["87"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default function NavBar() {\r\n  const { testStore } = useStore();\r\n\r\n  return (\r\n    <Menu pointing widths={10}>\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/tests\" name=\"Testet\" exact />\r\n        <Menu.Item as={NavLink} to=\"/countries\" name=\"Statistikat\" />\r\n        <Menu.Item as={NavLink} to=\"/patients\" name=\"Pacientet\" />\r\n        <Menu.Item name=\"Profili\" />\r\n        <Menu.Item position={\"right\"}>\r\n          <Button content=\"Kycu\" />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Button content=\"Regjistrohu\" />\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\patients\\dashboard\\PatientDashboard.tsx",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\home\\HomePage.tsx",["88","89"],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\dashboard\\TestDashboard.tsx",["90"],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\stats\\CountryDashboard.tsx",["91"],"import React from \"react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport CountryList from \"./CountryList\";\r\n\r\nexport default function CourtyDashboard() {\r\n  return <CountryList />;\r\n}\r\n","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\api\\agent.ts",["92"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { count } from \"console\";\r\nimport { Country } from \"../models/country\";\r\nimport { Patient } from \"../models/patient\";\r\nimport { Test } from \"../models/test\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\n\r\naxios.interceptors.response.use(async (response) => {\r\n  try {\r\n    await sleep(700);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return await Promise.reject(error);\r\n  }\r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Tests = {\r\n  list: () => requests.get<Test[]>(\"/tests\"),\r\n  details: (id: string) => requests.get<Test>(`/tests/${id}`),\r\n  create: (test: Test) => axios.post<void>(\"/tests\", test),\r\n  update: (test: Test) => axios.put<void>(`/tests/${test.id}`, test),\r\n  delete: (id: string) => axios.delete<void>(`/tests/${id}`),\r\n};\r\n\r\nconst Countries = {\r\n  list: () => requests.get<Country[]>(\"/countries\"),\r\n  details: (id: string) => requests.get<Country>(`/countries/${id}`),\r\n  create: (country: Country) => axios.post<void>(\"/countries\", country),\r\n  update: (country: Country) =>\r\n    axios.put<void>(`/countries/${country.id}`, test),\r\n  delete: (id: string) => axios.delete<void>(`/countries/${id}`),\r\n};\r\n\r\nconst Patients = {\r\n  list: () => requests.get<Patient[]>(\"/patients\"),\r\n  details: (id: string) => requests.get<Patient>(`/patients/${id}`),\r\n  create: (patient: Patient) => requests.post<void>(\"/patients\", patient),\r\n  update: (patient: Patient) =>\r\n    axios.put<void>(`/patients/${patient.id}`, patient),\r\n  delete: (id: string) => axios.delete<void>(`/patients/${id}`),\r\n};\r\n\r\nconst agent = {\r\n  Tests,\r\n  Countries,\r\n  Patients,\r\n};\r\n\r\nexport default agent;\r\n","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\patients\\dashboard\\PatientList.tsx",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\dashboard\\TestList.tsx",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\stats\\CountryList.tsx",["93","94","95","96","97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Item,\r\n  ItemMeta,\r\n  Label,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Country } from \"../../app/models/country\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\n\r\nexport default function CountryList() {\r\n  const [countries, setCountries] = useState<Country[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // if (loading) return <LoadingComponent content=\"Loading app\" />;\r\n\r\n  useEffect(() => {\r\n    agent.Countries.list().then((response) => {\r\n      let countries: Country[] = [];\r\n      response.forEach((country) => {\r\n        // test.date = test.date.split(\"T\")[0];\r\n        countries.push(country);\r\n      });\r\n      setCountries(countries);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Item.Group divided>\r\n      {countries.map((country) => (\r\n        <Item key={country.id}>\r\n          <Item.Content>\r\n            <Item.Header as=\"a\">{country.name}</Item.Header>\r\n            <Item.Description>\r\n              <Statistic>\r\n                <Statistic.Value>{country.infections}</Statistic.Value>\r\n                <Statistic.Label>Infektime</Statistic.Label>\r\n              </Statistic>\r\n              <Statistic>\r\n                <Statistic.Value>{country.deaths}</Statistic.Value>\r\n                <Statistic.Label>Vdekje</Statistic.Label>\r\n              </Statistic>\r\n              <Statistic>\r\n                <Statistic.Value>{country.recoveries}</Statistic.Value>\r\n                <Statistic.Label>Rikuperime</Statistic.Label>\r\n              </Statistic>\r\n              <Statistic>\r\n                <Statistic.Value>{country.vaccinated}</Statistic.Value>\r\n                <Statistic.Label>Vaksinime</Statistic.Label>\r\n              </Statistic>\r\n\r\n              {/* <div>Infections: {country.infections}</div>\r\n              <div>Deaths: {country.deaths}</div>\r\n              <div>Recoveries: {country.recoveries}</div>\r\n              <div>Vaccinated: {country.vaccinated}</div> */}\r\n            </Item.Description>\r\n            <Item.Extra>\r\n              {/* <Button floated=\"right\" content=\"View\" color=\"blue\" />\r\n                <Button floated=\"right\" content=\"Delete\" color=\"red\" /> */}\r\n            </Item.Extra>\r\n          </Item.Content>\r\n        </Item>\r\n      ))}\r\n    </Item.Group>\r\n  );\r\n}\r\n","C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\details\\TestDetails.tsx",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\tests\\form\\TestForm.tsx",[],"C:\\Users\\StarTech Ferizaj\\Desktop\\lab1\\client\\src\\features\\patients\\form\\PatientForm.tsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":61,"column":24,"nodeType":"105","messageId":"106","endLine":61,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":7,"column":11,"nodeType":"109","messageId":"110","endLine":7,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":5,"column":3,"nodeType":"109","messageId":"110","endLine":5,"endColumn":11},{"ruleId":"107","severity":1,"message":"112","line":11,"column":3,"nodeType":"109","messageId":"110","endLine":11,"endColumn":7},{"ruleId":"107","severity":1,"message":"113","line":3,"column":24,"nodeType":"109","messageId":"110","endLine":3,"endColumn":31},{"ruleId":"107","severity":1,"message":"114","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":24},{"ruleId":"107","severity":1,"message":"115","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":15},{"ruleId":"107","severity":1,"message":"116","line":3,"column":3,"nodeType":"109","messageId":"110","endLine":3,"endColumn":9},{"ruleId":"107","severity":1,"message":"117","line":5,"column":3,"nodeType":"109","messageId":"110","endLine":5,"endColumn":11},{"ruleId":"107","severity":1,"message":"118","line":6,"column":3,"nodeType":"109","messageId":"110","endLine":6,"endColumn":8},{"ruleId":"107","severity":1,"message":"113","line":7,"column":3,"nodeType":"109","messageId":"110","endLine":7,"endColumn":10},{"ruleId":"107","severity":1,"message":"114","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":24},{"ruleId":"107","severity":1,"message":"119","line":16,"column":10,"nodeType":"109","messageId":"110","endLine":16,"endColumn":17},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-self-assign","'patient.birthday' is assigned to itself.","MemberExpression","selfAssignment","@typescript-eslint/no-unused-vars","'testStore' is assigned a value but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'Segment' is defined but never used.","'LoadingComponent' is defined but never used.","'count' is defined but never used.","'Button' is defined but never used.","'ItemMeta' is defined but never used.","'Label' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]