[{"/home/bleart/code/cs/shneta/client/src/index.tsx":"1","/home/bleart/code/cs/shneta/client/src/reportWebVitals.ts":"2","/home/bleart/code/cs/shneta/client/src/app/layout/App.tsx":"3","/home/bleart/code/cs/shneta/client/src/app/api/agent.ts":"4","/home/bleart/code/cs/shneta/client/src/app/layout/LoadingComponent.tsx":"5","/home/bleart/code/cs/shneta/client/src/app/layout/NavBar.tsx":"6","/home/bleart/code/cs/shneta/client/src/features/tests/dashboard/TestDashboard.tsx":"7","/home/bleart/code/cs/shneta/client/src/features/tests/dashboard/TestList.tsx":"8","/home/bleart/code/cs/shneta/client/src/features/tests/details/TestDetails.tsx":"9","/home/bleart/code/cs/shneta/client/src/features/tests/form/TestForm.tsx":"10","/home/bleart/projects/lab1/client/src/index.tsx":"11","/home/bleart/projects/lab1/client/src/reportWebVitals.ts":"12","/home/bleart/projects/lab1/client/src/app/layout/App.tsx":"13","/home/bleart/projects/lab1/client/src/app/api/agent.ts":"14","/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx":"15","/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx":"16","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx":"17","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx":"18","/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx":"19","/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx":"20","/home/bleart/projects/lab1/client/src/app/stores/store.ts":"21","/home/bleart/projects/lab1/client/src/app/stores/testStore.ts":"22"},{"size":523,"mtime":1607152858000,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607152858000,"results":"25","hashOfConfig":"24"},{"size":2683,"mtime":1620418614527,"results":"26","hashOfConfig":"24"},{"size":1221,"mtime":1620418832773,"results":"27","hashOfConfig":"24"},{"size":370,"mtime":1607152858000,"results":"28","hashOfConfig":"24"},{"size":860,"mtime":1620422394342,"results":"29","hashOfConfig":"24"},{"size":1461,"mtime":1620417300659,"results":"30","hashOfConfig":"24"},{"size":1767,"mtime":1620417983574,"results":"31","hashOfConfig":"24"},{"size":1074,"mtime":1620418014432,"results":"32","hashOfConfig":"24"},{"size":2265,"mtime":1620419994622,"results":"33","hashOfConfig":"24"},{"size":648,"mtime":1620661818632,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":1607152858000,"results":"36","hashOfConfig":"35"},{"size":1277,"mtime":1620661818628,"results":"37","hashOfConfig":"35"},{"size":1221,"mtime":1620418832773,"results":"38","hashOfConfig":"35"},{"size":941,"mtime":1620661818628,"results":"39","hashOfConfig":"35"},{"size":370,"mtime":1607152858000,"results":"40","hashOfConfig":"35"},{"size":1132,"mtime":1620661818632,"results":"41","hashOfConfig":"35"},{"size":1811,"mtime":1620661818632,"results":"42","hashOfConfig":"35"},{"size":1153,"mtime":1620661818632,"results":"43","hashOfConfig":"35"},{"size":2332,"mtime":1620661818632,"results":"44","hashOfConfig":"35"},{"size":315,"mtime":1620661818628,"results":"45","hashOfConfig":"35"},{"size":2056,"mtime":1620661818628,"results":"46","hashOfConfig":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"5a90f9",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vkc3pu",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/bleart/code/cs/shneta/client/src/index.tsx",[],["95","96"],"/home/bleart/code/cs/shneta/client/src/reportWebVitals.ts",[],"/home/bleart/code/cs/shneta/client/src/app/layout/App.tsx",[],"/home/bleart/code/cs/shneta/client/src/app/api/agent.ts",[],"/home/bleart/code/cs/shneta/client/src/app/layout/LoadingComponent.tsx",[],"/home/bleart/code/cs/shneta/client/src/app/layout/NavBar.tsx",[],"/home/bleart/code/cs/shneta/client/src/features/tests/dashboard/TestDashboard.tsx",[],"/home/bleart/code/cs/shneta/client/src/features/tests/dashboard/TestList.tsx",[],"/home/bleart/code/cs/shneta/client/src/features/tests/details/TestDetails.tsx",[],"/home/bleart/code/cs/shneta/client/src/features/tests/form/TestForm.tsx",[],"/home/bleart/projects/lab1/client/src/index.tsx",[],"/home/bleart/projects/lab1/client/src/reportWebVitals.ts",[],["97","98"],"/home/bleart/projects/lab1/client/src/app/layout/App.tsx",[],"/home/bleart/projects/lab1/client/src/app/api/agent.ts",[],"/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx",[],"/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx",["99","100"],"import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Test } from \"../../../app/models/test\";\nimport TestDetails from \"../details/TestDetails\";\nimport TestForm from \"../form/TestForm\";\nimport TestList from \"./TestList\";\n\ninterface Props {\n  tests: Test[];\n  selectedTest: Test | undefined;\n  selectTest: (id: string) => void;\n  cancelSelectTest: () => void;\n  editMode: boolean;\n  openForm: (id: string) => void;\n  closeForm: () => void;\n  createOrEdit: (test: Test) => void;\n  deleteTest: (id: string) => void;\n  submitting: boolean;\n}\n\nexport default function TestDashboard({\n  tests,\n  selectedTest,\n  deleteTest,\n  selectTest,\n  cancelSelectTest,\n  editMode,\n  openForm,\n  closeForm,\n  createOrEdit,\n  submitting,\n}: Props) {\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        <TestList\n          tests={tests}\n          selectTest={selectTest}\n          deleteTest={deleteTest}\n          submitting={submitting}\n        />\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        {selectedTest && !editMode && (\n          <TestDetails\n            test={selectedTest}\n            cancelSelectTest={cancelSelectTest}\n            openForm={openForm}\n          />\n        )}\n        {editMode && (\n          <TestForm\n            closeForm={closeForm}\n            test={selectedTest}\n            createOrEdit={createOrEdit}\n            submitting={submitting}\n          />\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx",["101"],"import React, { ChangeEvent, useState } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport { Test } from \"../../../app/models/test\";\n\ninterface Props {\n  test: Test | undefined;\n  closeForm: () => void;\n  createOrEdit: (test: Test) => void;\n  submitting: boolean;\n}\n\nexport default function TestForm({\n  test: selectedTest,\n  closeForm,\n  createOrEdit,\n  submitting,\n}: Props) {\n  const initialState = selectedTest ?? {\n    id: \"\",\n    patientId: 0,\n    date: \"\",\n    description: \"\",\n    hospitalId: 0,\n    vaccineId: 0,\n    variation: \"\",\n  };\n\n  const [test, setTest] = useState(initialState);\n\n  function handleSubmit() {\n    createOrEdit(test);\n  }\n\n  function handleInputChange(\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) {\n    const { name, value } = event.target;\n    setTest({ ...test, [name]: value });\n  }\n\n  return (\n    <Segment clearing>\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          placeholder=\"Patient ID\"\n          value={test.patientId}\n          name=\"title\"\n          onChange={handleInputChange}\n        />\n        <Form.Input\n          type=\"date\"\n          placeholder=\"Date\"\n          value={test.date}\n          name=\"date\"\n          onChange={handleInputChange}\n        />\n        <Form.Input\n          placeholder=\"Description\"\n          value={test.description}\n          name=\"description\"\n          onChange={handleInputChange}\n        />\n        <Form.Input\n          placeholder=\"Hospital ID\"\n          value={test.hospitalId}\n          name=\"hospitalId\"\n          onChange={handleInputChange}\n        />\n        <Form.Input\n          placeholder=\"Vaccine ID\"\n          value={test.vaccineId}\n          name=\"vaccineId\"\n          onChange={handleInputChange}\n        />\n        <Form.Input\n          placeholder=\"Variation\"\n          value={test.variation}\n          name=\"variation\"\n          onChange={handleInputChange}\n        />\n        <Button\n          loading={submitting}\n          floated=\"right\"\n          positive\n          type=\"submit\"\n          content=\"Submit\"\n        />\n        <Button\n          onClick={closeForm}\n          floated=\"right\"\n          type=\"button\"\n          content=\"Cancel\"\n        />\n      </Form>\n    </Segment>\n  );\n}\n","/home/bleart/projects/lab1/client/src/app/stores/store.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/testStore.ts",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":24,"column":13,"nodeType":"110","messageId":"111","endLine":24,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'IProps' is defined but never used.","'Test' is defined but never used.","no-global-assign","no-unsafe-negation"]