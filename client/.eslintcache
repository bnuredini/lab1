[{"/home/bleart/projects/lab1/client/src/index.tsx":"1","/home/bleart/projects/lab1/client/src/reportWebVitals.ts":"2","/home/bleart/projects/lab1/client/src/app/stores/store.ts":"3","/home/bleart/projects/lab1/client/src/app/layout/App.tsx":"4","/home/bleart/projects/lab1/client/src/app/stores/commonStore.ts":"5","/home/bleart/projects/lab1/client/src/app/stores/modalStore.ts":"6","/home/bleart/projects/lab1/client/src/app/stores/testStore.ts":"7","/home/bleart/projects/lab1/client/src/app/stores/userStore.ts":"8","/home/bleart/projects/lab1/client/src/app/stores/patientStore.ts":"9","/home/bleart/projects/lab1/client/src/features/screening-test/ScreeningTest.js":"10","/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx":"11","/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx":"12","/home/bleart/projects/lab1/client/src/Stats.tsx":"13","/home/bleart/projects/lab1/client/src/errors/TestError.tsx":"14","/home/bleart/projects/lab1/client/src/errors/ServerError.tsx":"15","/home/bleart/projects/lab1/client/src/errors/NotFound.tsx":"16","/home/bleart/projects/lab1/client/src/features/home/HomePage.tsx":"17","/home/bleart/projects/lab1/client/src/features/users/LoginForm.tsx":"18","/home/bleart/projects/lab1/client/src/features/stats/CountryDashboard.tsx":"19","/home/bleart/projects/lab1/client/src/features/users/LoginPage.tsx":"20","/home/bleart/projects/lab1/client/src/app/common/modals/ModalContainer.tsx":"21","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx":"22","/home/bleart/projects/lab1/client/src/features/patients/form/PatientForm.tsx":"23","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientDashboard.tsx":"24","/home/bleart/projects/lab1/client/src/app/api/agent.ts":"25","/home/bleart/projects/lab1/client/src/features/screening-test/Result.js":"26","/home/bleart/projects/lab1/client/src/features/screening-test/Quiz.js":"27","/home/bleart/projects/lab1/client/src/features/users/RegisterForm.tsx":"28","/home/bleart/projects/lab1/client/src/errors/ValidationErrors.tsx":"29","/home/bleart/projects/lab1/client/src/app/common/options/genderOptions.ts":"30","/home/bleart/projects/lab1/client/src/features/covcomponents/GlobalInfo.tsx":"31","/home/bleart/projects/lab1/client/src/features/covcomponents/CountryList.tsx":"32","/home/bleart/projects/lab1/client/src/features/stats/CountryList.tsx":"33","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx":"34","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientList.tsx":"35","/home/bleart/projects/lab1/client/src/app/common/form/MySelectInput.tsx":"36","/home/bleart/projects/lab1/client/src/app/common/form/MyTextInput.tsx":"37","/home/bleart/projects/lab1/client/src/app/common/form/MyDateInput.tsx":"38","/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx":"39","/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx":"40","/home/bleart/projects/lab1/client/src/features/patients/details/PatientDetails.tsx":"41","/home/bleart/projects/lab1/client/src/features/screening-test/AnswerOption.js":"42","/home/bleart/projects/lab1/client/src/features/screening-test/QuestionCount.js":"43","/home/bleart/projects/lab1/client/src/features/screening-test/Question.js":"44","/home/bleart/projects/lab1/client/src/app/common/options/variationOptions.ts":"45","/home/bleart/projects/lab1/client/src/app/common/form/MyTextArea.tsx":"46","/home/bleart/projects/lab1/client/src/features/screening-test/quizQuestions.js":"47","/home/bleart/projects/lab1/client/src/features/admin/AdminDashboard.tsx":"48","/home/bleart/projects/lab1/client/src/features/home/Footer.tsx":"49"},{"size":939,"mtime":1622056564899,"results":"50","hashOfConfig":"51"},{"size":425,"mtime":1622056564899,"results":"52","hashOfConfig":"51"},{"size":715,"mtime":1622890919357,"results":"53","hashOfConfig":"51"},{"size":2618,"mtime":1622892428826,"results":"54","hashOfConfig":"51"},{"size":742,"mtime":1622056564895,"results":"55","hashOfConfig":"51"},{"size":448,"mtime":1622056564895,"results":"56","hashOfConfig":"51"},{"size":2750,"mtime":1622753748643,"results":"57","hashOfConfig":"51"},{"size":1387,"mtime":1622056564895,"results":"58","hashOfConfig":"51"},{"size":3472,"mtime":1622056564895,"results":"59","hashOfConfig":"51"},{"size":3378,"mtime":1622673362985,"results":"60","hashOfConfig":"51"},{"size":3024,"mtime":1622915630731,"results":"61","hashOfConfig":"51"},{"size":357,"mtime":1622053241860,"results":"62","hashOfConfig":"51"},{"size":1171,"mtime":1622203146938,"results":"63","hashOfConfig":"51"},{"size":2070,"mtime":1622673362981,"results":"64","hashOfConfig":"51"},{"size":626,"mtime":1622053266672,"results":"65","hashOfConfig":"51"},{"size":428,"mtime":1622053314406,"results":"66","hashOfConfig":"51"},{"size":6373,"mtime":1622893740670,"results":"67","hashOfConfig":"51"},{"size":1617,"mtime":1622056564899,"results":"68","hashOfConfig":"51"},{"size":141,"mtime":1621953958648,"results":"69","hashOfConfig":"51"},{"size":1644,"mtime":1622056564899,"results":"70","hashOfConfig":"51"},{"size":454,"mtime":1622056564891,"results":"71","hashOfConfig":"51"},{"size":1270,"mtime":1621953958648,"results":"72","hashOfConfig":"51"},{"size":2908,"mtime":1622673362981,"results":"73","hashOfConfig":"51"},{"size":1170,"mtime":1622056564895,"results":"74","hashOfConfig":"51"},{"size":3483,"mtime":1622673362981,"results":"75","hashOfConfig":"51"},{"size":233,"mtime":1622673362985,"results":"76","hashOfConfig":"51"},{"size":1097,"mtime":1622673362985,"results":"77","hashOfConfig":"51"},{"size":2069,"mtime":1622673362989,"results":"78","hashOfConfig":"51"},{"size":414,"mtime":1622891095425,"results":"79","hashOfConfig":"51"},{"size":114,"mtime":1622056564891,"results":"80","hashOfConfig":"51"},{"size":682,"mtime":1622327315504,"results":"81","hashOfConfig":"51"},{"size":1034,"mtime":1622203146938,"results":"82","hashOfConfig":"51"},{"size":2229,"mtime":1621953958648,"results":"83","hashOfConfig":"51"},{"size":3218,"mtime":1622800021424,"results":"84","hashOfConfig":"51"},{"size":1832,"mtime":1622056564895,"results":"85","hashOfConfig":"51"},{"size":828,"mtime":1622056564887,"results":"86","hashOfConfig":"51"},{"size":596,"mtime":1622056564891,"results":"87","hashOfConfig":"51"},{"size":794,"mtime":1622056564887,"results":"88","hashOfConfig":"51"},{"size":2917,"mtime":1622673362989,"results":"89","hashOfConfig":"51"},{"size":1266,"mtime":1622673362989,"results":"90","hashOfConfig":"51"},{"size":1568,"mtime":1622673362981,"results":"91","hashOfConfig":"51"},{"size":789,"mtime":1622673362985,"results":"92","hashOfConfig":"51"},{"size":320,"mtime":1622673362985,"results":"93","hashOfConfig":"51"},{"size":288,"mtime":1622673362985,"results":"94","hashOfConfig":"51"},{"size":303,"mtime":1622056564891,"results":"95","hashOfConfig":"51"},{"size":597,"mtime":1622056564891,"results":"96","hashOfConfig":"51"},{"size":1806,"mtime":1622673362985,"results":"97","hashOfConfig":"51"},{"size":1654,"mtime":1622895308823,"results":"98","hashOfConfig":"51"},{"size":1841,"mtime":1622893590710,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"11f68r5",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/home/bleart/projects/lab1/client/src/index.tsx",[],["207","208"],"/home/bleart/projects/lab1/client/src/reportWebVitals.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/store.ts",[],"/home/bleart/projects/lab1/client/src/app/layout/App.tsx",["209"],"import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport TestDashboard from \"../../features/tests/dashboard/TestDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport CountryDashboard from \"../../features/stats/CountryDashboard\";\nimport PatientDashboard from \"../../features/patients/dashboard/PatientDashboard\";\nimport PatientForm from \"../../features/patients/form/PatientForm\";\nimport TestErrors from \"../../errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../errors/NotFound\";\nimport ServerError from \"../../errors/ServerError\";\nimport LoginForm from \"../../features/users/LoginForm\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport LoginPage from \"../../features/users/LoginPage\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport Stats from \"../../Stats\";\nimport ScreeningTest from \"../../features/screening-test/ScreeningTest\";\nimport AdminDashboard from \"../../features/admin/AdminDashboard\";\n\nfunction App() {\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <NavBar />\n      <ModalContainer />\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n\n      <Container style={{ marginTop: \"7em\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/screening-test\" component={ScreeningTest} />\n          <Route exact path=\"/stats\" component={Stats} />\n          <Route path=\"/tests\" component={TestDashboard} />\n          <Route path=\"/countries\" component={CountryDashboard} />\n          <Route path=\"/patients\" component={PatientDashboard} />\n          <Route path=\"/newPatient\" component={PatientForm} />\n          <Route path=\"/errors\" component={TestErrors} />\n          <Route path=\"/server-error\" component={ServerError} />\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/admin\" component={AdminDashboard} />\n          <Route exact path=\"/loginpage\" component={HomePage} />\n          <Route component={NotFound} />\n        </Switch>\n      </Container>\n    </>\n  );\n}\n\nexport default observer(App);\n","/home/bleart/projects/lab1/client/src/app/stores/commonStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/modalStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/testStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/userStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/patientStore.ts",[],"/home/bleart/projects/lab1/client/src/features/screening-test/ScreeningTest.js",[],["210","211"],"/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx",[],"/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx",[],"/home/bleart/projects/lab1/client/src/Stats.tsx",[],"/home/bleart/projects/lab1/client/src/errors/TestError.tsx",[],"/home/bleart/projects/lab1/client/src/errors/ServerError.tsx",[],"/home/bleart/projects/lab1/client/src/errors/NotFound.tsx",[],"/home/bleart/projects/lab1/client/src/features/home/HomePage.tsx",["212","213","214"],"import React from \"react\";\nimport {\n  Container,\n  Divider,\n  Embed,\n  Grid,\n  Header,\n  Image,\n  List,\n  Segment,\n} from \"semantic-ui-react\";\nimport Footer from \"./Footer\";\n// import Footer from \"./Footer\";\n\nexport default function HomePage() {\n  return (\n    <div style={{ margin: \"0\" }}>\n      <Container style={{ marginTop: \"7em\" }}>\n        <div className=\"main-bg\"></div>\n        <Image centered src=\"/assets/logo.png\" />\n        <h1 className=\"title\" style={{ textAlign: \"center\" }}>\n          shneta\n        </h1>\n\n        {/* Services w/ small icons */}\n        <Grid columns={4} style={{ margin: \"5rem 0rem\" }}>\n          <Grid.Column>\n            <Image centered src=\"/assets/tests.png\" width=\"100\" />\n            <h3 style={{ textAlign: \"center\" }}>Teste</h3>\n            <div style={{ textAlign: \"center\" }}>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed,\n              quis.\n            </div>\n          </Grid.Column>\n          <Grid.Column>\n            <Image centered src=\"/assets/stats.png\" width=\"100\" />\n            <h3 style={{ textAlign: \"center\" }}>Statistika</h3>\n            <div style={{ textAlign: \"center\" }}>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed,\n              quis.\n            </div>\n          </Grid.Column>\n          <Grid.Column>\n            <Image centered src=\"/assets/patients.png\" width=\"100\" />\n            <h3 style={{ textAlign: \"center\" }}>Menaxhim pacientesh</h3>\n            <div style={{ textAlign: \"center\" }}>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed,\n              quis.\n            </div>\n          </Grid.Column>\n          <Grid.Column>\n            <Image centered src=\"/assets/help.png\" width=\"100\" />\n            <h3 style={{ textAlign: \"center\" }}>Udhzime</h3>\n            <div style={{ textAlign: \"center\" }}>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed,\n              quis.\n            </div>\n          </Grid.Column>\n        </Grid>\n\n        {/* Tests */}\n        <div className=\"tests-wrapper\">\n          <Grid columns={2} className=\"tests\">\n            <Grid.Column width={6}>\n              <Image centered src=\"/assets/tests.png\" width=\"100\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Header as=\"h2\" content=\"Teste\"></Header>\n              <div>\n                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dicta\n                magnam debitis corrupti ea hic, modi reprehenderit atque, rerum\n                aspernatur quam aperiam unde ipsum nisi blanditiis sunt facilis\n                eligendi ut saepe quaerat inventore. Assumenda itaque aliquid\n                aliquam natus et aperiam placeat nemo atque cumque hic esse\n                incidunt iure nulla doloremque, officia ad omnis nisi\n                perspiciatis quis eius possimus ea provident. At, rerum! Eveniet\n                hic sequi tempora fuga facilis exercitationem cum officiis!\n              </div>\n            </Grid.Column>\n          </Grid>\n        </div>\n\n        {/* Stats */}\n        <div className=\"stats-wrapper\">\n          <Grid columns={2} className=\"stats\">\n            <Grid.Column>\n              <Header as=\"h2\" content=\"Statistika\"></Header>\n              <div>\n                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dicta\n                magnam debitis corrupti ea hic, modi reprehenderit atque, rerum\n                aspernatur quam aperiam unde ipsum nisi blanditiis sunt facilis\n                eligendi ut saepe quaerat inventore. Assumenda itaque aliquid\n                aliquam natus et aperiam placeat nemo atque cumque hic esse\n                incidunt iure nulla doloremque, officia ad omnis nisi\n                perspiciatis quis eius possimus ea provident. At, rerum! Eveniet\n                hic sequi tempora fuga facilis exercitationem cum officiis!\n              </div>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Image centered src=\"/assets/stats.png\" width=\"100\" />\n            </Grid.Column>\n          </Grid>\n        </div>\n\n        {/* Management */}\n        <div className=\"management-wrapper\">\n          <Grid columns={2} className=\"management\">\n            <Grid.Column width={6}>\n              <Image centered src=\"/assets/patients.png\" width=\"100\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Header as=\"h2\" content=\"Menaxhimi i pacienteve\"></Header>\n              <div>\n                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dicta\n                magnam debitis corrupti ea hic, modi reprehenderit atque, rerum\n                aspernatur quam aperiam unde ipsum nisi blanditiis sunt facilis\n                eligendi ut saepe quaerat inventore. Assumenda itaque aliquid\n                aliquam natus et aperiam placeat nemo atque cumque hic esse\n                incidunt iure nulla doloremque, officia ad omnis nisi\n                perspiciatis quis eius possimus ea provident. At, rerum! Eveniet\n                hic sequi tempora fuga facilis exercitationem cum officiis!\n              </div>\n            </Grid.Column>\n          </Grid>\n        </div>\n\n        {/* Help */}\n        <div className=\"help-wrapper\">\n          <Grid columns={2} className=\"help\">\n            <Grid.Column>\n              <Header as=\"h2\" content=\"Udhezime\"></Header>\n              <div>\n                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dicta\n                magnam debitis corrupti ea hic, modi reprehenderit atque, rerum\n                aspernatur quam aperiam unde ipsum nisi blanditiis sunt facilis\n                eligendi ut saepe quaerat inventore. Assumenda itaque aliquid\n                aliquam natus et aperiam placeat nemo atque cumque hic esse\n                incidunt iure nulla doloremque, officia ad omnis nisi\n                perspiciatis quis eius possimus ea provident. At, rerum! Eveniet\n                hic sequi tempora fuga facilis exercitationem cum officiis!\n              </div>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Image centered src=\"/assets/help.png\" width=\"100\" />\n            </Grid.Column>\n          </Grid>\n        </div>\n\n        <Embed id=\"zBkVCpbNnkU\" source=\"youtube\" aspectRatio=\"16:9\" />\n\n        <Footer />\n      </Container>\n    </div>\n  );\n}\n","/home/bleart/projects/lab1/client/src/features/users/LoginForm.tsx",[],"/home/bleart/projects/lab1/client/src/features/stats/CountryDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/features/users/LoginPage.tsx",[],["215","216"],"/home/bleart/projects/lab1/client/src/app/common/modals/ModalContainer.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/form/PatientForm.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/app/api/agent.ts",[],"/home/bleart/projects/lab1/client/src/features/screening-test/Result.js",[],"/home/bleart/projects/lab1/client/src/features/screening-test/Quiz.js",[],"/home/bleart/projects/lab1/client/src/features/users/RegisterForm.tsx",[],"/home/bleart/projects/lab1/client/src/errors/ValidationErrors.tsx",[],"/home/bleart/projects/lab1/client/src/app/common/options/genderOptions.ts",[],"/home/bleart/projects/lab1/client/src/features/covcomponents/GlobalInfo.tsx",[],"/home/bleart/projects/lab1/client/src/features/covcomponents/CountryList.tsx",[],"/home/bleart/projects/lab1/client/src/features/stats/CountryList.tsx",["217"],"import React, { useEffect, useState } from \"react\";\nimport { Item, Statistic } from \"semantic-ui-react\";\nimport agent from \"../../app/api/agent\";\nimport { Country } from \"../../app/models/country\";\n\nexport default function CountryList() {\n  const [countries, setCountries] = useState<Country[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // if (loading) return <LoadingComponent content=\"Loading app\" />;\n\n  useEffect(() => {\n    agent.Countries.list().then((response) => {\n      let countries: Country[] = [];\n      response.forEach((country) => {\n        // test.date = test.date.split(\"T\")[0];\n        countries.push(country);\n      });\n      setCountries(countries);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <Item.Group divided>\n      {countries.map((country) => (\n        <Item key={country.id}>\n          <Item.Content>\n            <Item.Header as=\"a\">{country.name}</Item.Header>\n            <Item.Description>\n              <Statistic>\n                <Statistic.Value>{country.infections}</Statistic.Value>\n                <Statistic.Label>Infektime</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.deaths}</Statistic.Value>\n                <Statistic.Label>Vdekje</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.recoveries}</Statistic.Value>\n                <Statistic.Label>Rikuperime</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.vaccinated}</Statistic.Value>\n                <Statistic.Label>Vaksinime</Statistic.Label>\n              </Statistic>\n\n              {/* <div>Infections: {country.infections}</div>\n              <div>Deaths: {country.deaths}</div>\n              <div>Recoveries: {country.recoveries}</div>\n              <div>Vaccinated: {country.vaccinated}</div> */}\n            </Item.Description>\n            <Item.Extra>\n              {/* <Button floated=\"right\" content=\"View\" color=\"blue\" />\n                <Button floated=\"right\" content=\"Delete\" color=\"red\" /> */}\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n      ))}\n    </Item.Group>\n  );\n}\n","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx",["218","219"],"import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Button, Item, Label, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function TestList() {\n  const { testStore } = useStore();\n  const { deleteTest, loading, testsByDate, testsByPatient } = testStore;\n  const [target, setTarget] = useState(\"\");\n\n  function handleTestDelete(e: SyntheticEvent<HTMLButtonElement>, id: string) {\n    setTarget(e.currentTarget.name);\n    deleteTest(id);\n  }\n\n  return (\n    <Segment>\n      <Item.Group divided>\n        {testsByPatient.map((test) => {\n          // replace w/ the current users id\n          if (test.patientId !== 12332) return;\n\n          return (\n            <Item key={test.id}>\n              <Item.Content>\n                <Item.Header as=\"a\">{test.description}</Item.Header>\n                <Item.Meta>\n                  {format(test.date!, \"dd.MM.yyyy, (h:mm aa)\")}\n                </Item.Meta>\n                <Item.Description>\n                  <div>{test.description}</div>\n                  <div>\n                    {test.hospitalId}, {test.vaccineId}\n                  </div>\n                </Item.Description>\n                <Item.Extra>\n                  <Button\n                    onClick={() => testStore.selectTest(test.id)}\n                    floated=\"right\"\n                    content=\"Shiko\"\n                    color=\"blue\"\n                  />\n                  <Button\n                    name={test.id}\n                    loading={loading && target === test.id}\n                    onClick={(e) => handleTestDelete(e, test.id)}\n                    floated=\"right\"\n                    content=\"Fshij\"\n                    color=\"red\"\n                  />\n                  <Label basic content={test.variation} />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          );\n        })}\n\n        {/* {testsByDate.map((test) => (\n          <Item key={test.id}>\n            <Item.Content>\n              <Item.Header as=\"a\">{test.description}</Item.Header>\n              <Item.Meta>\n                {format(test.date!, \"dd.MM.yyyy, (h:mm aa)\")}\n              </Item.Meta>\n              <Item.Description>\n                <div>{test.description}</div>\n                <div>\n                  {test.hospitalId}, {test.vaccineId}\n                </div>\n              </Item.Description>\n              <Item.Extra>\n                <Button\n                  onClick={() => testStore.selectTest(test.id)}\n                  floated=\"right\"\n                  content=\"Shiko\"\n                  color=\"blue\"\n                />\n                <Button\n                  name={test.id}\n                  loading={loading && target === test.id}\n                  onClick={(e) => handleTestDelete(e, test.id)}\n                  floated=\"right\"\n                  content=\"Fshij\"\n                  color=\"red\"\n                />\n                <Label basic content={test.variation} />\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        ))} */}\n      </Item.Group>\n    </Segment>\n  );\n});\n","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientList.tsx",[],"/home/bleart/projects/lab1/client/src/app/common/form/MySelectInput.tsx",[],"/home/bleart/projects/lab1/client/src/app/common/form/MyTextInput.tsx",[],"/home/bleart/projects/lab1/client/src/app/common/form/MyDateInput.tsx",["220"],"import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n}\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/details/PatientDetails.tsx",[],"/home/bleart/projects/lab1/client/src/features/screening-test/AnswerOption.js",[],"/home/bleart/projects/lab1/client/src/features/screening-test/QuestionCount.js",[],"/home/bleart/projects/lab1/client/src/features/screening-test/Question.js",[],"/home/bleart/projects/lab1/client/src/app/common/options/variationOptions.ts",[],"/home/bleart/projects/lab1/client/src/app/common/form/MyTextArea.tsx",[],"/home/bleart/projects/lab1/client/src/features/screening-test/quizQuestions.js",[],"/home/bleart/projects/lab1/client/src/features/admin/AdminDashboard.tsx",["221"],"import React, { Component } from \"react\";\nimport { Grid, Menu, Segment } from \"semantic-ui-react\";\n\nexport default class AdminDashboard extends Component {\n  state = { activeItem: \"privateCenters\" };\n\n  handleItemClick = (e: any, { name }: any) =>\n    this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Grid columns={2}>\n        <Grid.Column width=\"4\">\n          <Menu fluid vertical tabular>\n            <Menu.Item\n              name=\"Private Centers\"\n              active={activeItem === \"Private Centers\"}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name=\"Public Centers\"\n              active={activeItem === \"Public Centers\"}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name=\"Vaccines\"\n              active={activeItem === \"Vaccines\"}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name=\"Variations\"\n              active={activeItem === \"Variations\"}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name=\"Users\"\n              active={activeItem === \"Users\"}\n              onClick={this.handleItemClick}\n            />\n          </Menu>\n        </Grid.Column>\n        <Grid.Column>\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. Qui\n          explicabo itaque aperiam magni at. Laudantium ipsam ab, voluptatem\n          voluptas veniam sed. Consequuntur quis non aliquam id ipsum porro\n          vitae perferendis.\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","/home/bleart/projects/lab1/client/src/features/home/Footer.tsx",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":18,"column":8,"nodeType":"228","messageId":"229","endLine":18,"endColumn":17},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"230","line":4,"column":3,"nodeType":"228","messageId":"229","endLine":4,"endColumn":10},{"ruleId":"226","severity":1,"message":"231","line":9,"column":3,"nodeType":"228","messageId":"229","endLine":9,"endColumn":7},{"ruleId":"226","severity":1,"message":"232","line":10,"column":3,"nodeType":"228","messageId":"229","endLine":10,"endColumn":10},{"ruleId":"222","replacedBy":"233"},{"ruleId":"224","replacedBy":"234"},{"ruleId":"226","severity":1,"message":"235","line":8,"column":10,"nodeType":"228","messageId":"229","endLine":8,"endColumn":17},{"ruleId":"226","severity":1,"message":"236","line":9,"column":32,"nodeType":"228","messageId":"229","endLine":9,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":22,"column":41,"nodeType":"239","messageId":"240","endLine":22,"endColumn":48},{"ruleId":"226","severity":1,"message":"241","line":6,"column":11,"nodeType":"228","messageId":"229","endLine":6,"endColumn":16},{"ruleId":"226","severity":1,"message":"232","line":2,"column":22,"nodeType":"228","messageId":"229","endLine":2,"endColumn":29},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"@typescript-eslint/no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'List' is defined but never used.","'Segment' is defined but never used.",["242"],["243"],"'loading' is assigned a value but never used.","'testsByDate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Props' is defined but never used.","no-global-assign","no-unsafe-negation"]