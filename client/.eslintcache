[{"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\index.tsx":"1","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\reportWebVitals.ts":"2","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\store.ts":"3","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\App.tsx":"4","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\testStore.ts":"5","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\NavBar.tsx":"6","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\home\\HomePage.tsx":"7","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestDashboard.tsx":"8","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryDashboard.tsx":"9","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\api\\agent.ts":"10","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\LoadingComponent.tsx":"11","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestList.tsx":"12","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryList.tsx":"13","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\details\\TestDetails.tsx":"14","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\form\\TestForm.tsx":"15"},{"size":763,"mtime":1620947914284,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1620430208848,"results":"18","hashOfConfig":"17"},{"size":331,"mtime":1620675235576,"results":"19","hashOfConfig":"17"},{"size":753,"mtime":1620947914271,"results":"20","hashOfConfig":"17"},{"size":2796,"mtime":1620947914275,"results":"21","hashOfConfig":"17"},{"size":925,"mtime":1620947914273,"results":"22","hashOfConfig":"17"},{"size":227,"mtime":1620947914276,"results":"23","hashOfConfig":"17"},{"size":1326,"mtime":1620947914280,"results":"24","hashOfConfig":"17"},{"size":147,"mtime":1620947914277,"results":"25","hashOfConfig":"17"},{"size":1740,"mtime":1620947914270,"results":"26","hashOfConfig":"17"},{"size":384,"mtime":1620430208836,"results":"27","hashOfConfig":"17"},{"size":1793,"mtime":1620947914283,"results":"28","hashOfConfig":"17"},{"size":1675,"mtime":1620947914278,"results":"29","hashOfConfig":"17"},{"size":1193,"mtime":1620675235578,"results":"30","hashOfConfig":"17"},{"size":2354,"mtime":1620846730438,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ww6l92",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\index.tsx",[],["68","69"],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\reportWebVitals.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\store.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\App.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\testStore.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\NavBar.tsx",["70"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default function NavBar() {\r\n  const { testStore } = useStore();\r\n\r\n  return (\r\n    <Menu pointing widths={10}>\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/tests\" name=\"Tests\" exact />\r\n        <Menu.Item as={NavLink} to=\"/countries\" name=\"Statistics\" />\r\n        <Menu.Item name=\"Profile\" />\r\n        <Menu.Item position={\"right\"}>\r\n          <Button content=\"Login\" />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Button content=\"Register\" />\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\home\\HomePage.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestDashboard.tsx",["71"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Button, Grid, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport TestDetails from \"../details/TestDetails\";\r\nimport TestForm from \"../form/TestForm\";\r\nimport TestList from \"./TestList\";\r\n\r\nexport default observer(function TestDashboard() {\r\n  const { testStore } = useStore();\r\n  const { selectedTest, editMode } = testStore;\r\n\r\n  useEffect(() => {\r\n    testStore.loadTests();\r\n  }, [testStore]); // side-effect runs when any dependecy values changes\r\n\r\n  if (testStore.loadingIntial)\r\n    return <LoadingComponent content=\"Loading app\" />;\r\n\r\n  // set the app's title\r\n  // TODO: find a better way to do this\r\n  document.title = \"lab1\";\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => testStore.openForm()}\r\n        primary\r\n        content=\"Create a Test\"\r\n        style={{ marginBottom: \"1.4rem\" }}\r\n      />\r\n      <Grid>\r\n        <Grid.Column width=\"12\">\r\n          {selectedTest && !editMode && <TestDetails />}\r\n          {editMode && <TestForm />}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"12\">\r\n          <TestList />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n});\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryDashboard.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\api\\agent.ts",["72"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { count } from \"console\";\r\nimport { Country } from \"../models/country\";\r\nimport { Test } from \"../models/test\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\n\r\naxios.interceptors.response.use(async (response) => {\r\n  try {\r\n    await sleep(700);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return await Promise.reject(error);\r\n  }\r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Tests = {\r\n  list: () => requests.get<Test[]>(\"/tests\"),\r\n  details: (id: string) => requests.get<Test>(`/tests/${id}`),\r\n  create: (test: Test) => axios.post<void>(\"/tests\", test),\r\n  update: (test: Test) => axios.put<void>(`/tests/${test.id}`, test),\r\n  delete: (id: string) => axios.delete<void>(`/tests/${id}`),\r\n};\r\n\r\nconst Countries = {\r\n  list: () => requests.get<Country[]>(\"/countries\"),\r\n  details: (id: string) => requests.get<Country>(`/countries/${id}`),\r\n  create: (country: Country) => axios.post<void>(\"/countries\", country),\r\n  update: (country: Country) =>\r\n    axios.put<void>(`/countries/${country.id}`, test),\r\n  delete: (id: string) => axios.delete<void>(`/countries/${id}`),\r\n};\r\n\r\nconst agent = {\r\n  Tests,\r\n  Countries,\r\n};\r\n\r\nexport default agent;\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\LoadingComponent.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestList.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryList.tsx",["73","74","75","76","77"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Item, ItemMeta, Label, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Country } from \"../../app/models/country\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\n\r\nexport default function CountryList() {\r\n  const [countries, setCountries] = useState<Country[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    agent.Countries.list().then((response) => {\r\n      let countries: Country[] = [];\r\n      response.forEach((country) => {\r\n        // test.date = test.date.split(\"T\")[0];\r\n        countries.push(country);\r\n      });\r\n      setCountries(countries);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Segment>\r\n      <Item.Group divided>\r\n        {countries.map((country) => (\r\n          <Item key={country.id}>\r\n            <Item.Content>\r\n              <Item.Header as=\"a\">{country.name}</Item.Header>\r\n              {/* <Item.Meta>{country.deaths}</Item.Meta> */}\r\n              <Item.Description>\r\n                <div>Infections: {country.infections}</div>\r\n                <div>Deaths: {country.deaths}</div>\r\n                <div>Recoveries: {country.recoveries}</div>\r\n                <div>Vaccinated: {country.vaccinated}</div>\r\n              </Item.Description>\r\n              <Item.Extra>\r\n                {/* <Button floated=\"right\" content=\"View\" color=\"blue\" />\r\n                <Button floated=\"right\" content=\"Delete\" color=\"red\" /> */}\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n}\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\details\\TestDetails.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\form\\TestForm.tsx",[],["78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":7,"column":11,"nodeType":"86","messageId":"87","endLine":7,"endColumn":20},{"ruleId":"84","severity":1,"message":"88","line":3,"column":24,"nodeType":"86","messageId":"87","endLine":3,"endColumn":31},{"ruleId":"84","severity":1,"message":"89","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":15},{"ruleId":"84","severity":1,"message":"90","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":16},{"ruleId":"84","severity":1,"message":"91","line":2,"column":24,"nodeType":"86","messageId":"87","endLine":2,"endColumn":32},{"ruleId":"84","severity":1,"message":"92","line":2,"column":34,"nodeType":"86","messageId":"87","endLine":2,"endColumn":39},{"ruleId":"84","severity":1,"message":"93","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":24},{"ruleId":"84","severity":1,"message":"94","line":9,"column":10,"nodeType":"86","messageId":"87","endLine":9,"endColumn":17},{"ruleId":"80","replacedBy":"95"},{"ruleId":"82","replacedBy":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'testStore' is assigned a value but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'count' is defined but never used.","'Button' is defined but never used.","'ItemMeta' is defined but never used.","'Label' is defined but never used.","'LoadingComponent' is defined but never used.","'loading' is assigned a value but never used.",["97"],["98"],"no-global-assign","no-unsafe-negation"]