[{"/home/bleart/projects/lab1/client/src/index.tsx":"1","/home/bleart/projects/lab1/client/src/reportWebVitals.ts":"2","/home/bleart/projects/lab1/client/src/app/stores/store.ts":"3","/home/bleart/projects/lab1/client/src/app/layout/App.tsx":"4","/home/bleart/projects/lab1/client/src/app/stores/modalStore.ts":"5","/home/bleart/projects/lab1/client/src/app/stores/commonStore.ts":"6","/home/bleart/projects/lab1/client/src/app/stores/userStore.ts":"7","/home/bleart/projects/lab1/client/src/app/stores/patientStore.ts":"8","/home/bleart/projects/lab1/client/src/app/stores/testStore.ts":"9","/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx":"10","/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx":"11","/home/bleart/projects/lab1/client/src/errors/TestError.tsx":"12","/home/bleart/projects/lab1/client/src/errors/NotFound.tsx":"13","/home/bleart/projects/lab1/client/src/errors/ServerError.tsx":"14","/home/bleart/projects/lab1/client/src/features/home/HomePage.tsx":"15","/home/bleart/projects/lab1/client/src/features/users/LoginForm.tsx":"16","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx":"17","/home/bleart/projects/lab1/client/src/features/stats/CountryDashboard.tsx":"18","/home/bleart/projects/lab1/client/src/features/users/LoginPage.tsx":"19","/home/bleart/projects/lab1/client/src/app/common/modals/ModalContainer.tsx":"20","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientDashboard.tsx":"21","/home/bleart/projects/lab1/client/src/features/patients/form/PatientForm.tsx":"22","/home/bleart/projects/lab1/client/src/app/api/agent.ts":"23","/home/bleart/projects/lab1/client/src/features/users/RegisterForm.tsx":"24","/home/bleart/projects/lab1/client/src/errors/ValidationErrors.tsx":"25","/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx":"26","/home/bleart/projects/lab1/client/src/features/stats/CountryList.tsx":"27","/home/bleart/projects/lab1/client/src/app/common/form/MyTextInput.tsx":"28","/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx":"29","/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx":"30","/home/bleart/projects/lab1/client/src/app/common/options/genderOptions.ts":"31","/home/bleart/projects/lab1/client/src/app/common/form/MySelectInput.tsx":"32","/home/bleart/projects/lab1/client/src/app/common/form/MyDateInput.tsx":"33","/home/bleart/projects/lab1/client/src/features/patients/details/PatientDetails.tsx":"34","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientList.tsx":"35","/home/bleart/projects/lab1/client/src/app/common/options/variationOptions.ts":"36","/home/bleart/projects/lab1/client/src/app/common/form/MyTextArea.tsx":"37","/home/bleart/projects/lab1/client/src/Stats.tsx":"38","/home/bleart/projects/lab1/client/src/CovComponents/CountryList.tsx":"39","/home/bleart/projects/lab1/client/src/CovComponents/GlobalInfo.tsx":"40"},{"size":939,"mtime":1622056564899,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1622056564899,"results":"43","hashOfConfig":"42"},{"size":715,"mtime":1622056564895,"results":"44","hashOfConfig":"42"},{"size":2347,"mtime":1622058043216,"results":"45","hashOfConfig":"42"},{"size":448,"mtime":1622056564895,"results":"46","hashOfConfig":"42"},{"size":742,"mtime":1622056564895,"results":"47","hashOfConfig":"42"},{"size":1387,"mtime":1622056564895,"results":"48","hashOfConfig":"42"},{"size":3472,"mtime":1622056564895,"results":"49","hashOfConfig":"42"},{"size":2669,"mtime":1622053260092,"results":"50","hashOfConfig":"42"},{"size":2514,"mtime":1622057951797,"results":"51","hashOfConfig":"42"},{"size":357,"mtime":1622053241860,"results":"52","hashOfConfig":"42"},{"size":2091,"mtime":1622053315882,"results":"53","hashOfConfig":"42"},{"size":428,"mtime":1622053314406,"results":"54","hashOfConfig":"42"},{"size":626,"mtime":1622053266672,"results":"55","hashOfConfig":"42"},{"size":3492,"mtime":1621953958644,"results":"56","hashOfConfig":"42"},{"size":1617,"mtime":1622056564899,"results":"57","hashOfConfig":"42"},{"size":1270,"mtime":1621953958648,"results":"58","hashOfConfig":"42"},{"size":141,"mtime":1621953958648,"results":"59","hashOfConfig":"42"},{"size":1644,"mtime":1622056564899,"results":"60","hashOfConfig":"42"},{"size":454,"mtime":1622056564891,"results":"61","hashOfConfig":"42"},{"size":1170,"mtime":1622056564895,"results":"62","hashOfConfig":"42"},{"size":2570,"mtime":1622056564895,"results":"63","hashOfConfig":"42"},{"size":3534,"mtime":1622056564887,"results":"64","hashOfConfig":"42"},{"size":2076,"mtime":1622056564899,"results":"65","hashOfConfig":"42"},{"size":414,"mtime":1622056564895,"results":"66","hashOfConfig":"42"},{"size":1810,"mtime":1622049832357,"results":"67","hashOfConfig":"42"},{"size":2229,"mtime":1621953958648,"results":"68","hashOfConfig":"42"},{"size":596,"mtime":1622056564891,"results":"69","hashOfConfig":"42"},{"size":1266,"mtime":1622049832357,"results":"70","hashOfConfig":"42"},{"size":2945,"mtime":1622056564899,"results":"71","hashOfConfig":"42"},{"size":114,"mtime":1622056564891,"results":"72","hashOfConfig":"42"},{"size":828,"mtime":1622056564887,"results":"73","hashOfConfig":"42"},{"size":794,"mtime":1622056564887,"results":"74","hashOfConfig":"42"},{"size":1580,"mtime":1622049832353,"results":"75","hashOfConfig":"42"},{"size":1832,"mtime":1622056564895,"results":"76","hashOfConfig":"42"},{"size":303,"mtime":1622056564891,"results":"77","hashOfConfig":"42"},{"size":597,"mtime":1622056564891,"results":"78","hashOfConfig":"42"},{"size":1153,"mtime":1622056838843,"results":"79","hashOfConfig":"42"},{"size":1031,"mtime":1622056838843,"results":"80","hashOfConfig":"42"},{"size":632,"mtime":1622056838843,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11f68r5",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bleart/projects/lab1/client/src/index.tsx",[],"/home/bleart/projects/lab1/client/src/reportWebVitals.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/store.ts",[],"/home/bleart/projects/lab1/client/src/app/layout/App.tsx",[],"/home/bleart/projects/lab1/client/src/app/stores/modalStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/commonStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/userStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/patientStore.ts",[],"/home/bleart/projects/lab1/client/src/app/stores/testStore.ts",[],"/home/bleart/projects/lab1/client/src/app/layout/NavBar.tsx",["166"],"/home/bleart/projects/lab1/client/src/app/layout/LoadingComponent.tsx",[],"/home/bleart/projects/lab1/client/src/errors/TestError.tsx",[],"/home/bleart/projects/lab1/client/src/errors/NotFound.tsx",[],"/home/bleart/projects/lab1/client/src/errors/ServerError.tsx",[],"/home/bleart/projects/lab1/client/src/features/home/HomePage.tsx",[],["167","168"],"/home/bleart/projects/lab1/client/src/features/users/LoginForm.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/features/stats/CountryDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/features/users/LoginPage.tsx",[],"/home/bleart/projects/lab1/client/src/app/common/modals/ModalContainer.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientDashboard.tsx",[],"/home/bleart/projects/lab1/client/src/features/patients/form/PatientForm.tsx",["169"],"/home/bleart/projects/lab1/client/src/app/api/agent.ts",[],"/home/bleart/projects/lab1/client/src/features/users/RegisterForm.tsx",["170"],"/home/bleart/projects/lab1/client/src/errors/ValidationErrors.tsx",["171"],"/home/bleart/projects/lab1/client/src/features/tests/dashboard/TestList.tsx",[],"/home/bleart/projects/lab1/client/src/features/stats/CountryList.tsx",["172"],"import React, { useEffect, useState } from \"react\";\nimport { Item, Statistic } from \"semantic-ui-react\";\nimport agent from \"../../app/api/agent\";\nimport { Country } from \"../../app/models/country\";\n\nexport default function CountryList() {\n  const [countries, setCountries] = useState<Country[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // if (loading) return <LoadingComponent content=\"Loading app\" />;\n\n  useEffect(() => {\n    agent.Countries.list().then((response) => {\n      let countries: Country[] = [];\n      response.forEach((country) => {\n        // test.date = test.date.split(\"T\")[0];\n        countries.push(country);\n      });\n      setCountries(countries);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <Item.Group divided>\n      {countries.map((country) => (\n        <Item key={country.id}>\n          <Item.Content>\n            <Item.Header as=\"a\">{country.name}</Item.Header>\n            <Item.Description>\n              <Statistic>\n                <Statistic.Value>{country.infections}</Statistic.Value>\n                <Statistic.Label>Infektime</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.deaths}</Statistic.Value>\n                <Statistic.Label>Vdekje</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.recoveries}</Statistic.Value>\n                <Statistic.Label>Rikuperime</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>{country.vaccinated}</Statistic.Value>\n                <Statistic.Label>Vaksinime</Statistic.Label>\n              </Statistic>\n\n              {/* <div>Infections: {country.infections}</div>\n              <div>Deaths: {country.deaths}</div>\n              <div>Recoveries: {country.recoveries}</div>\n              <div>Vaccinated: {country.vaccinated}</div> */}\n            </Item.Description>\n            <Item.Extra>\n              {/* <Button floated=\"right\" content=\"View\" color=\"blue\" />\n                <Button floated=\"right\" content=\"Delete\" color=\"red\" /> */}\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n      ))}\n    </Item.Group>\n  );\n}\n","/home/bleart/projects/lab1/client/src/app/common/form/MyTextInput.tsx",[],"/home/bleart/projects/lab1/client/src/features/tests/details/TestDetails.tsx",["173"],"import { format } from \"date-fns\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default function TestDetails() {\n  const { testStore } = useStore();\n  const { selectedTest: test, openForm, cancelSelectedTest } = testStore;\n\n  if (!test) return <LoadingComponent />;\n\n  return (\n    <Card fluid>\n      <Image src={`/assets/categoryImages/${test.variation}.jpg`} />\n      <Card.Content>\n        <Card.Header>{test.description}</Card.Header>\n        <Card.Meta>\n          <span>{format (test.date!, 'dd.MM.yyyy, (h:mm aa)')}</span>\n        </Card.Meta>\n        <Card.Description>{test.description}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Button.Group widths=\"2\">\n          <Button \n            onClick={() => openForm(test.id)}\n            basic\n            color=\"blue\"\n            content=\"Edit\"\n          />\n          <Button \n            onClick={cancelSelectedTest}\n            basic\n            color=\"grey\"\n            content=\"Cancel\"\n          />\n        </Button.Group>\n      </Card.Content>\n    </Card>\n  );\n}\n","/home/bleart/projects/lab1/client/src/features/tests/form/TestForm.tsx",["174","175"],"/home/bleart/projects/lab1/client/src/app/common/options/genderOptions.ts",[],"/home/bleart/projects/lab1/client/src/app/common/form/MySelectInput.tsx",[],"/home/bleart/projects/lab1/client/src/app/common/form/MyDateInput.tsx",["176"],"/home/bleart/projects/lab1/client/src/features/patients/details/PatientDetails.tsx",["177","178"],"import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { format } from \"date-fns\";\n\nexport default observer(function PatientDetails() {\n  const { patientStore } = useStore();\n  const {\n    selectedPatient: patient,\n    loadPatient,\n    loadingInitial,\n    openForm,\n    cancelSelectedPatient\n  } = patientStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadPatient(id);\n  }, [id, loadPatient]);\n\n  if (loadingInitial || !patient) return <LoadingComponent />;\n  return (\n    <Card fluid>\n     {/* <Image src={`/assets/categoryImages/${patient.phone_Number}.jpg`} /> */}\n      <Card.Content>\n        <Card.Header>{patient.full_Name}</Card.Header>\n        <Card.Meta>\n          <span>{format (patient.birthday!, 'dd.MM.yyyy, (h:mm aa)')}</span>\n        </Card.Meta>\n        <Card.Description>{patient.gender}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n      <Button.Group widths=\"2\">\n          <Button \n            onClick={() => openForm(patient.id)}\n            basic\n            color=\"blue\"\n            content=\"Edit\"\n          />\n          <Button \n            onClick={cancelSelectedPatient}\n            basic\n            color=\"grey\"\n            content=\"Cancel\"\n          />\n        </Button.Group>\n      </Card.Content>\n    </Card>\n  );\n});\n","/home/bleart/projects/lab1/client/src/features/patients/dashboard/PatientList.tsx",[],"/home/bleart/projects/lab1/client/src/app/common/options/variationOptions.ts",[],"/home/bleart/projects/lab1/client/src/app/common/form/MyTextArea.tsx",[],"/home/bleart/projects/lab1/client/src/Stats.tsx",[],"/home/bleart/projects/lab1/client/src/CovComponents/CountryList.tsx",[],"/home/bleart/projects/lab1/client/src/CovComponents/GlobalInfo.tsx",[],{"ruleId":"179","severity":1,"message":"180","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":18},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"179","severity":1,"message":"187","line":9,"column":24,"nodeType":"181","messageId":"182","endLine":9,"endColumn":36},{"ruleId":"179","severity":1,"message":"188","line":4,"column":26,"nodeType":"181","messageId":"182","endLine":4,"endColumn":31},{"ruleId":"189","severity":1,"message":"190","line":13,"column":42,"nodeType":"191","messageId":"192","endLine":13,"endColumn":44},{"ruleId":"179","severity":1,"message":"193","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":17},{"ruleId":"179","severity":1,"message":"194","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"179","severity":1,"message":"187","line":1,"column":24,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"195","line":1,"column":38,"nodeType":"181","messageId":"182","endLine":1,"endColumn":55},{"ruleId":"179","severity":1,"message":"196","line":6,"column":11,"nodeType":"181","messageId":"182","endLine":6,"endColumn":16},{"ruleId":"179","severity":1,"message":"194","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"179","severity":1,"message":"197","line":4,"column":24,"nodeType":"181","messageId":"182","endLine":4,"endColumn":29},"@typescript-eslint/no-unused-vars","'modalStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["198"],"no-negated-in-lhs",["199"],"'ErrorMessage' is defined but never used.","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loading' is assigned a value but never used.","'Link' is defined but never used.","'validateYupSchema' is defined but never used.","'Props' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]