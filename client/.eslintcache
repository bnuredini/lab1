[{"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\index.tsx":"1","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\reportWebVitals.ts":"2","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\store.ts":"3","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\App.tsx":"4","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\commonStore.ts":"5","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\modalStore.ts":"6","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\patientStore.ts":"7","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\userStore.ts":"8","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\testStore.ts":"9","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\NavBar.tsx":"10","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\LoadingComponent.tsx":"11","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\TestError.tsx":"12","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\NotFound.tsx":"13","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\ServerError.tsx":"14","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\home\\HomePage.tsx":"15","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryDashboard.tsx":"16","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\users\\LoginForm.tsx":"17","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\users\\LoginPage.tsx":"18","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\dashboard\\PatientDashboard.tsx":"19","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\form\\PatientForm.tsx":"20","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestDashboard.tsx":"21","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\modals\\ModalContainer.tsx":"22","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\api\\agent.ts":"23","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\users\\RegisterForm.tsx":"24","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\ValidationErrors.tsx":"25","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\options\\genderOptions.ts":"26","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryList.tsx":"27","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\dashboard\\PatientList.tsx":"28","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestList.tsx":"29","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MyTextInput.tsx":"30","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MySelectInput.tsx":"31","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MyDateInput.tsx":"32","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\details\\TestDetails.tsx":"33","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\details\\PatientDetails.tsx":"34","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\form\\TestForm.tsx":"35","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\options\\variationOptions.ts":"36","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MyTextArea.tsx":"37","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\Stats.tsx":"38","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\covcomponents\\CountryList.tsx":"39","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\covcomponents\\GlobalInfo.tsx":"40"},{"size":966,"mtime":1622053736268,"results":"41","hashOfConfig":"42"},{"size":440,"mtime":1622053736327,"results":"43","hashOfConfig":"42"},{"size":743,"mtime":1622053736082,"results":"44","hashOfConfig":"42"},{"size":2409,"mtime":1622060089977,"results":"45","hashOfConfig":"42"},{"size":777,"mtime":1622053736033,"results":"46","hashOfConfig":"42"},{"size":474,"mtime":1622053736048,"results":"47","hashOfConfig":"42"},{"size":3613,"mtime":1622053736064,"results":"48","hashOfConfig":"42"},{"size":1443,"mtime":1622053736099,"results":"49","hashOfConfig":"42"},{"size":2791,"mtime":1621968873678,"results":"50","hashOfConfig":"42"},{"size":2592,"mtime":1622060090114,"results":"51","hashOfConfig":"42"},{"size":375,"mtime":1621518661718,"results":"52","hashOfConfig":"42"},{"size":2171,"mtime":1621968873733,"results":"53","hashOfConfig":"42"},{"size":447,"mtime":1621968873699,"results":"54","hashOfConfig":"42"},{"size":646,"mtime":1621968873716,"results":"55","hashOfConfig":"42"},{"size":3597,"mtime":1621968873765,"results":"56","hashOfConfig":"42"},{"size":147,"mtime":1621968873789,"results":"57","hashOfConfig":"42"},{"size":1672,"mtime":1622053736161,"results":"58","hashOfConfig":"42"},{"size":1700,"mtime":1622053294049,"results":"59","hashOfConfig":"42"},{"size":1211,"mtime":1622043004682,"results":"60","hashOfConfig":"42"},{"size":2659,"mtime":1622043114785,"results":"61","hashOfConfig":"42"},{"size":1314,"mtime":1621968873820,"results":"62","hashOfConfig":"42"},{"size":472,"mtime":1622053735950,"results":"63","hashOfConfig":"42"},{"size":3656,"mtime":1622053735897,"results":"64","hashOfConfig":"42"},{"size":2140,"mtime":1622053736162,"results":"65","hashOfConfig":"42"},{"size":434,"mtime":1622040826207,"results":"66","hashOfConfig":"42"},{"size":118,"mtime":1622053735965,"results":"67","hashOfConfig":"42"},{"size":2291,"mtime":1621968873807,"results":"68","hashOfConfig":"42"},{"size":1887,"mtime":1622043031973,"results":"69","hashOfConfig":"42"},{"size":1864,"mtime":1621968873822,"results":"70","hashOfConfig":"42"},{"size":621,"mtime":1622053735934,"results":"71","hashOfConfig":"42"},{"size":860,"mtime":1622076471420,"results":"72","hashOfConfig":"42"},{"size":823,"mtime":1622053735917,"results":"73","hashOfConfig":"42"},{"size":1308,"mtime":1621968873824,"results":"74","hashOfConfig":"42"},{"size":1633,"mtime":1621968873770,"results":"75","hashOfConfig":"42"},{"size":3056,"mtime":1622076639451,"results":"76","hashOfConfig":"42"},{"size":310,"mtime":1622053735980,"results":"77","hashOfConfig":"42"},{"size":622,"mtime":1622053735933,"results":"78","hashOfConfig":"42"},{"size":1219,"mtime":1622075507668,"results":"79","hashOfConfig":"42"},{"size":1079,"mtime":1622075491754,"results":"80","hashOfConfig":"42"},{"size":653,"mtime":1622060089870,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"17xrftk",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\index.tsx",[],["171","172"],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\reportWebVitals.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\store.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\App.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\commonStore.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\modalStore.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\patientStore.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\userStore.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\stores\\testStore.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\NavBar.tsx",["173"],"import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport LoginForm from \"../../features/users/LoginForm\";\r\nimport RegisterForm from \"../../features/users/RegisterForm\";\r\nimport modalStore from \"../stores/modalStore\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const { userStore, modalStore } = useStore();\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu pointing widths={10}>\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/tests\" name=\"Testet\" exact />\r\n        <Menu.Item as={NavLink} to=\"/stats\" name=\"Statistikat\" />\r\n        <Menu.Item as={NavLink} to=\"/patients\" name=\"Pacientet\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item name=\"Profili\" />\r\n        <Menu.Item position={\"right\"}></Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          {userStore.isLoggedIn ? (\r\n            <>\r\n              <Image\r\n                src={user?.image || \"/assets/user.png\"}\r\n                avatar\r\n                spaced=\"right\"\r\n              />\r\n              <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/profile/${user?.username}`}\r\n                    text=\"My Profile\"\r\n                    icon=\"user\"\r\n                  />\r\n                  <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {userStore.isLoggedIn ? (\r\n            <div></div>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                onClick={() => modalStore.openModal(<LoginForm />)}\r\n                inverted\r\n                style={{ margin: \"0rem 1rem\" }}\r\n              >\r\n                Kycu\r\n              </Button>\r\n              <Button\r\n                onClick={() => modalStore.openModal(<RegisterForm />)}\r\n                inverted\r\n              >\r\n                Registrohu\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\layout\\LoadingComponent.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\TestError.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\NotFound.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\ServerError.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\home\\HomePage.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryDashboard.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\users\\LoginForm.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\users\\LoginPage.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\dashboard\\PatientDashboard.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\form\\PatientForm.tsx",["174"],"import { observer } from \"mobx-react-lite\";\r\nimport React, {useState } from \"react\";\r\nimport { Button,Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from  'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { Formik, Form, ErrorMessage} from \"formik\";\r\nimport { genderOptions } from \"../../../app/common/options/genderOptions\";\r\nimport { Patient } from \"../../../app/models/patient\";\r\n\r\nexport default observer(function PatientForm() {\r\n  const { patientStore } = useStore();\r\n  const { createPatient, selectedPatient, closeForm, updatePatient, loading} = patientStore;\r\n   \r\n  \r\n  const initialState = selectedPatient ?? {\r\n    id: \"\",\r\n    full_Name: \"\",\r\n    birthday: null,\r\n    gender: \"\",\r\n    phone_Number:0,\r\n    email: \"\",\r\n    address:\"\",\r\n    \r\n  };\r\n\r\n  const validationSchema=Yup.object({\r\n  \r\n    full_Name: Yup.string().required(),\r\n    birthday: Yup.string().required('Ju lutem vendosni ditelindjen').nullable(),\r\n    gender: Yup.string().required(),\r\n    phone_Number: Yup.number().required(),\r\n    email: Yup.string().required(),\r\n    address: Yup.string().required()\r\n    \r\n  })\r\n  const [patient] = useState(initialState);\r\n\r\n  function handleFormSubmit(patient: Patient) {\r\n     patient.id ? updatePatient(patient) : createPatient(patient);\r\n   }\r\n\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Formik \r\n      validationSchema={validationSchema}\r\n      enableReinitialize\r\n      initialValues={patient}\r\n      onSubmit={values => handleFormSubmit(values)}>\r\n        {({handleSubmit, isValid, isSubmitting, dirty}) =>(\r\n    <Form  className='ui form' onSubmit={handleSubmit} >\r\n<MyTextInput  name=\"Emri dhe Mbiemri\" placeholder=\"Full_Name\"/>\r\n<MyDateInput\r\n          placeholderText=\"Ditelindja\"\r\n          name=\"date\"\r\n          showTimeSelect\r\n          timeCaption='time'\r\n          dateFormat='dd.MM.yyyy, (h:mm aa)'\r\n        />\r\n<MySelectInput options={genderOptions} placeholder=\"Gjinia\" name=\"gender\"/>\r\n<MyTextInput placeholder=\"Numri i telefonit\" name=\"phone_Number\"/>\r\n<MyTextInput placeholder=\"Email-i\" name=\"email\"/>\r\n<MyTextInput\r\n  placeholder=\"Adresa\" name=\"address\"/>\r\n<Button\r\ndisabled={isSubmitting || !dirty || !isValid}\r\n  loading={loading}\r\n  floated=\"right\"\r\n  positive\r\n  type=\"submit\"\r\n  content=\"Submit\"\r\n/>\r\n<Button\r\n onClick={closeForm}\r\n  to=\"/patients\"\r\n  floated=\"right\"\r\n  type=\"button\"\r\n  content=\"Cancel\"\r\n/>\r\n</Form>\r\n        )}\r\n      </Formik>\r\n      \r\n    </Segment>\r\n  );\r\n});\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestDashboard.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\modals\\ModalContainer.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\api\\agent.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\users\\RegisterForm.tsx",["175"],"import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n// import ValidationErrors from '../../errors/ValidationErrors';\r\nimport ValidationError from \"../../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up ne Shneta\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationError errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Regjistrohu\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\errors\\ValidationErrors.tsx",["176"],"import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationError({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => {\r\n            <Message.Item key={i}>{err}</Message.Item>;\r\n          })}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\options\\genderOptions.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\stats\\CountryList.tsx",["177"],"import React, { useEffect, useState } from \"react\";\r\nimport { Item, Statistic } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Country } from \"../../app/models/country\";\r\n\r\nexport default function CountryList() {\r\n  const [countries, setCountries] = useState<Country[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // if (loading) return <LoadingComponent content=\"Loading app\" />;\r\n\r\n  useEffect(() => {\r\n    agent.Countries.list().then((response) => {\r\n      let countries: Country[] = [];\r\n      response.forEach((country) => {\r\n        // test.date = test.date.split(\"T\")[0];\r\n        countries.push(country);\r\n      });\r\n      setCountries(countries);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Item.Group divided>\r\n      {countries.map((country) => (\r\n        <Item key={country.id}>\r\n          <Item.Content>\r\n            <Item.Header as=\"a\">{country.name}</Item.Header>\r\n            <Item.Description>\r\n              <Statistic>\r\n                <Statistic.Value>{country.infections}</Statistic.Value>\r\n                <Statistic.Label>Infektime</Statistic.Label>\r\n              </Statistic>\r\n              <Statistic>\r\n                <Statistic.Value>{country.deaths}</Statistic.Value>\r\n                <Statistic.Label>Vdekje</Statistic.Label>\r\n              </Statistic>\r\n              <Statistic>\r\n                <Statistic.Value>{country.recoveries}</Statistic.Value>\r\n                <Statistic.Label>Rikuperime</Statistic.Label>\r\n              </Statistic>\r\n              <Statistic>\r\n                <Statistic.Value>{country.vaccinated}</Statistic.Value>\r\n                <Statistic.Label>Vaksinime</Statistic.Label>\r\n              </Statistic>\r\n\r\n              {/* <div>Infections: {country.infections}</div>\r\n              <div>Deaths: {country.deaths}</div>\r\n              <div>Recoveries: {country.recoveries}</div>\r\n              <div>Vaccinated: {country.vaccinated}</div> */}\r\n            </Item.Description>\r\n            <Item.Extra>\r\n              {/* <Button floated=\"right\" content=\"View\" color=\"blue\" />\r\n                <Button floated=\"right\" content=\"Delete\" color=\"red\" /> */}\r\n            </Item.Extra>\r\n          </Item.Content>\r\n        </Item>\r\n      ))}\r\n    </Item.Group>\r\n  );\r\n}\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\dashboard\\PatientList.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\dashboard\\TestList.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MyTextInput.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MySelectInput.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MyDateInput.tsx",["178"],"import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\details\\TestDetails.tsx",["179"],"import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Card, Image } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default function TestDetails() {\r\n  const { testStore } = useStore();\r\n  const { selectedTest: test, openForm, cancelSelectedTest } = testStore;\r\n\r\n  if (!test) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Card fluid>\r\n      <Image src={`/assets/categoryImages/${test.variation}.jpg`} />\r\n      <Card.Content>\r\n        <Card.Header>{test.description}</Card.Header>\r\n        <Card.Meta>\r\n          <span>{format (test.date!, 'dd.MM.yyyy, (h:mm aa)')}</span>\r\n        </Card.Meta>\r\n        <Card.Description>{test.description}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button.Group widths=\"2\">\r\n          <Button \r\n            onClick={() => openForm(test.id)}\r\n            basic\r\n            color=\"blue\"\r\n            content=\"Edit\"\r\n          />\r\n          <Button \r\n            onClick={cancelSelectedTest}\r\n            basic\r\n            color=\"grey\"\r\n            content=\"Cancel\"\r\n          />\r\n        </Button.Group>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\patients\\details\\PatientDetails.tsx",["180","181"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Card, Image } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default observer(function PatientDetails() {\r\n  const { patientStore } = useStore();\r\n  const {\r\n    selectedPatient: patient,\r\n    loadPatient,\r\n    loadingInitial,\r\n    openForm,\r\n    cancelSelectedPatient\r\n  } = patientStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadPatient(id);\r\n  }, [id, loadPatient]);\r\n\r\n  if (loadingInitial || !patient) return <LoadingComponent />;\r\n  return (\r\n    <Card fluid>\r\n     {/* <Image src={`/assets/categoryImages/${patient.phone_Number}.jpg`} /> */}\r\n      <Card.Content>\r\n        <Card.Header>{patient.full_Name}</Card.Header>\r\n        <Card.Meta>\r\n          <span>{format (patient.birthday!, 'dd.MM.yyyy, (h:mm aa)')}</span>\r\n        </Card.Meta>\r\n        <Card.Description>{patient.gender}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n      <Button.Group widths=\"2\">\r\n          <Button \r\n            onClick={() => openForm(patient.id)}\r\n            basic\r\n            color=\"blue\"\r\n            content=\"Edit\"\r\n          />\r\n          <Button \r\n            onClick={cancelSelectedPatient}\r\n            basic\r\n            color=\"grey\"\r\n            content=\"Cancel\"\r\n          />\r\n        </Button.Group>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n});\r\n","D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\tests\\form\\TestForm.tsx",["182","183"],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\options\\variationOptions.ts",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\app\\common\\form\\MyTextArea.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\Stats.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\covcomponents\\CountryList.tsx",[],"D:\\UBT\\viti II\\semestri 4\\lab kurs\\Project\\lab1\\client\\src\\features\\covcomponents\\GlobalInfo.tsx",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":7,"column":8,"nodeType":"190","messageId":"191","endLine":7,"endColumn":18},{"ruleId":"188","severity":1,"message":"192","line":9,"column":24,"nodeType":"190","messageId":"191","endLine":9,"endColumn":36},{"ruleId":"188","severity":1,"message":"193","line":4,"column":26,"nodeType":"190","messageId":"191","endLine":4,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":13,"column":42,"nodeType":"196","messageId":"197","endLine":13,"endColumn":44},{"ruleId":"188","severity":1,"message":"198","line":8,"column":10,"nodeType":"190","messageId":"191","endLine":8,"endColumn":17},{"ruleId":"188","severity":1,"message":"199","line":6,"column":11,"nodeType":"190","messageId":"191","endLine":6,"endColumn":16},{"ruleId":"188","severity":1,"message":"200","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"200","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"201","line":4,"column":24,"nodeType":"190","messageId":"191","endLine":4,"endColumn":29},{"ruleId":"188","severity":1,"message":"192","line":1,"column":24,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"202","line":1,"column":38,"nodeType":"190","messageId":"191","endLine":1,"endColumn":55},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"@typescript-eslint/no-unused-vars","'modalStore' is defined but never used.","Identifier","unusedVar","'ErrorMessage' is defined but never used.","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loading' is assigned a value but never used.","'Props' is defined but never used.","'Link' is defined but never used.","'Image' is defined but never used.","'validateYupSchema' is defined but never used.","no-global-assign","no-unsafe-negation"]